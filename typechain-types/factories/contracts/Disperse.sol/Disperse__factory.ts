/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Disperse,
  DisperseInterface,
} from "../../../contracts/Disperse.sol/Disperse";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseTokenSimple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a2a806100206000396000f3fe6080604052600436106100345760003560e01c806351ba162c14610039578063c73a2d6014610062578063e63d38ed1461008b575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610734565b6100a7565b005b34801561006e57600080fd5b5061008960048036038101906100849190610734565b610189565b005b6100a560048036038101906100a091906107bf565b61033c565b005b60005b8251811015610183578373ffffffffffffffffffffffffffffffffffffffff166323b872dd338584815181106100e3576100e2610837565b5b60200260200101518585815181106100fe576100fd610837565b5b60200260200101516040518463ffffffff1660e01b815260040161012493929190610884565b6020604051808303816000875af1158015610143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016791906108f3565b61017057600080fd5b808061017b9061094f565b9150506100aa565b50505050565b6000805b83518110156101d1578281815181106101a9576101a8610837565b5b6020026020010151826101bc9190610997565b915080806101c99061094f565b91505061018d565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161020f93929190610884565b6020604051808303816000875af115801561022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025291906108f3565b61025b57600080fd5b60005b8351811015610335578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85838151811061029657610295610837565b5b60200260200101518584815181106102b1576102b0610837565b5b60200260200101516040518363ffffffff1660e01b81526004016102d69291906109cb565b6020604051808303816000875af11580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031991906108f3565b61032257600080fd5b808061032d9061094f565b91505061025e565b5050505050565b60005b82518110156103d65782818151811061035b5761035a610837565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc83838151811061038f5761038e610837565b5b60200260200101519081150290604051600060405180830381858888f193505050501580156103c2573d6000803e3d6000fd5b5080806103ce9061094f565b91505061033f565b506000479050600081111561042d573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561042b573d6000803e3d6000fd5b505b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047182610446565b9050919050565b600061048382610466565b9050919050565b61049381610478565b811461049e57600080fd5b50565b6000813590506104b08161048a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610504826104bb565b810181811067ffffffffffffffff82111715610523576105226104cc565b5b80604052505050565b6000610536610432565b905061054282826104fb565b919050565b600067ffffffffffffffff821115610562576105616104cc565b5b602082029050602081019050919050565b600080fd5b61058181610466565b811461058c57600080fd5b50565b60008135905061059e81610578565b92915050565b60006105b76105b284610547565b61052c565b905080838252602082019050602084028301858111156105da576105d9610573565b5b835b8181101561060357806105ef888261058f565b8452602084019350506020810190506105dc565b5050509392505050565b600082601f830112610622576106216104b6565b5b81356106328482602086016105a4565b91505092915050565b600067ffffffffffffffff821115610656576106556104cc565b5b602082029050602081019050919050565b6000819050919050565b61067a81610667565b811461068557600080fd5b50565b60008135905061069781610671565b92915050565b60006106b06106ab8461063b565b61052c565b905080838252602082019050602084028301858111156106d3576106d2610573565b5b835b818110156106fc57806106e88882610688565b8452602084019350506020810190506106d5565b5050509392505050565b600082601f83011261071b5761071a6104b6565b5b813561072b84826020860161069d565b91505092915050565b60008060006060848603121561074d5761074c61043c565b5b600061075b868287016104a1565b935050602084013567ffffffffffffffff81111561077c5761077b610441565b5b6107888682870161060d565b925050604084013567ffffffffffffffff8111156107a9576107a8610441565b5b6107b586828701610706565b9150509250925092565b600080604083850312156107d6576107d561043c565b5b600083013567ffffffffffffffff8111156107f4576107f3610441565b5b6108008582860161060d565b925050602083013567ffffffffffffffff81111561082157610820610441565b5b61082d85828601610706565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61086f81610466565b82525050565b61087e81610667565b82525050565b60006060820190506108996000830186610866565b6108a66020830185610866565b6108b36040830184610875565b949350505050565b60008115159050919050565b6108d0816108bb565b81146108db57600080fd5b50565b6000815190506108ed816108c7565b92915050565b6000602082840312156109095761090861043c565b5b6000610917848285016108de565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095a82610667565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098c5761098b610920565b5b600182019050919050565b60006109a282610667565b91506109ad83610667565b92508282019050808211156109c5576109c4610920565b5b92915050565b60006040820190506109e06000830185610866565b6109ed6020830184610875565b939250505056fea2646970667358221220ee5c44c92f93fa2fa440398ca8a92134dcb547c0bfda98da8a4f4d4124dd021b64736f6c63430008140033";

type DisperseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisperseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Disperse__factory extends ContractFactory {
  constructor(...args: DisperseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Disperse & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Disperse__factory {
    return super.connect(runner) as Disperse__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisperseInterface {
    return new Interface(_abi) as DisperseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Disperse {
    return new Contract(address, _abi, runner) as unknown as Disperse;
  }
}
